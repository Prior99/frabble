@import "../../variables.scss";

$cellModes: (
    "letter-double": "letterDouble",
    "letter-triple": "letterTriple",
    "word-double": "wordDouble",
    "word-triple": "wordTriple",
    "standard": "standard",
    "root": "root",
    "stand": "stand",
);

$cellColors: (
    "standard": color("secondary3", 1),
    "letterDouble": color("secondary1", 1),
    "letterTriple": color("secondary1", 2),
    "wordDouble": color("secondary2", 1),
    "wordTriple": color("secondary2", 2),
    "root": color("secondary3", 2),
    "stand": lighten(color("primary", 1), 10%),
);

$cellFontSize: (30 / 15) + vw;

.GameCell {
    border: 1px solid $white;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;

    font-weight: $bold;
    font-size: #{$cellFontSize};

    user-select: none;

    position: relative;
    z-index: 9;

    @mixin textColor($color) {
        > text {
            fill: $color;
            font-family: "Lato";
        }
    }

    &__description,
    &__letter,
    &__points {
        position: absolute;
        width: 100%;
        height: 100%;
    }


    &--content {
        $color: color("primary", 4);
        $backgroundColor: lighten(color("primary", 1), 8%);

        background-color: $backgroundColor;
        border-radius: 2px;
        border-color: lighten(color("primary", 1), 10%);
        position: relative;
        display: flex;
        justify-content: center;

        & > .GameCell__letter {
            @include textColor($color);
            $size: 85%;

            top: 4px;
            left: 0;
            width: $size;
            height: $size;
        }

        & > .GameCell__points {
            @include textColor($color);
            $size: 25%;
            $margin: 3px;

            font-size: calc(#{$cellFontSize} * 0.5);
            bottom: $margin;
            right: $margin;
            width: $size;
            height: $size;
        }

        & > .GameCell__description {
            display: none;
        }
    }

    &--empty {
        & > .GameCell__points,
        & > .GameCell__letter {
            display: none;
        }

        @each $className, $modeName in $cellModes {
            $color: map-get($cellColors, $modeName);
            $backgroundColor: lighten($color, 10%);
            $borderColor: lighten($color, 20%);

            &.GameCell--#{$className} {
                background-color: $backgroundColor;
                border-color: $borderColor;
                transition: all 0.1s ease-in-out;

                & > .GameCell__description {
                    @include textColor($white);
                }

                &.GameCell--hovering {
                    z-index: 10;
                    transform: scale(1.3);
                    border: 2px solid lighten(saturate($color, 15%), 25%);
                    border-radius: 3px;
                }

                &.GameCell--grayscale {
                    background-color: grayscale($backgroundColor);
                    border-color: grayscale($borderColor);
                }
            }

            &.GameCell--root {
                &::after {
                    font-size: calc(#{$cellFontSize} * 1.5);
                    padding-top: calc(#{$cellFontSize} * 0.15);
                }
            }
        }
    }

    &--dropHover {
        background-color: red;
    }
}
